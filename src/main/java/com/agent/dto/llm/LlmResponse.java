package com.agent.dto.llm;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.List;
import lombok.Data;

/**
 * Represents a response received from a Large Language Model (LLM) API.
 * This DTO is designed to capture the key parts of a typical LLM API response,
 * focusing on the generated content.
 * <p>
 * Lombok's {@code @Data} annotation generates standard boilerplate (getters, setters, etc.).
 * {@code @JsonIgnoreProperties(ignoreUnknown = true)} ensures that any extra fields
 * returned by the API that are not defined in this class are safely ignored during deserialization.
 */
@Data
@JsonIgnoreProperties(ignoreUnknown = true)
public class LlmResponse {

    /**
     * A list of possible responses or "choices" generated by the LLM.
     * In many cases, this list will contain a single choice.
     */
    private List<Choice> choices;

    /**
     * A nested static class representing a single choice or completion generated by the LLM.
     * It acts as a container for the actual message content.
     */
    @Data
    @JsonIgnoreProperties(ignoreUnknown = true)
    public static class Choice {
        /**
         * The message generated by the LLM for this choice.
         */
        private LlmResponseMessage message;
    }

    /**
     * A nested static class that encapsulates the content of the message from the LLM.
     * This is the innermost object containing the text response.
     */
    @Data
    @JsonIgnoreProperties(ignoreUnknown = true)
    public static class LlmResponseMessage {
        /**
         * The role of the message author, typically "assistant" for LLM responses.
         */
        private String role;

        /**
         * The textual content of the message generated by the LLM.
         * This often contains the JSON or text payload requested.
         */
        private String content;
    }
}